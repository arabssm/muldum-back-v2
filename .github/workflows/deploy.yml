name: CI/CD Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_BUCKET_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_BUCKET_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_BUCKET_REGION }}

      - name: Upload JAR to S3
        run: aws s3 cp build/libs/muldum-0.0.1-SNAPSHOT.jar s3://${{ secrets.AWS_BUCKET_NAME }}/muldum-0.0.1-SNAPSHOT.jar

      - name: Create CodeDeploy Deployment
        run: aws deploy create-deployment \
          --application-name ${{ secrets.AWS_CODE_DEPLOY_APPLICATION }} \
          --deployment-group-name ${{ secrets.AWS_CODE_DEPLOY_GROUP }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --s3-location bucket=${{ secrets.AWS_BUCKET_NAME }},key=muldum-0.0.1-SNAPSHOT.jar,bundleType=jar
      - name: Package files
        run: |
          mkdir -p deploy
          cp build/libs/muldum-0.0.1-SNAPSHOT.jar deploy/
          cp appspec.yml deploy/
          cp -r scripts deploy/
          cd deploy && zip -r ../muldum-deploy.zip . && cd ..

      - name: Upload to S3
        run: aws s3 cp muldum-deploy.zip s3://${{ secrets.AWS_BUCKET_NAME }}/muldum-deploy.zip

      - name: Create CodeDeploy Deployment
        run: aws deploy create-deployment \
          --application-name ${{ secrets.AWS_CODE_DEPLOY_APPLICATION }} \
          --deployment-group-name ${{ secrets.AWS_CODE_DEPLOY_GROUP }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --s3-location bucket=${{ secrets.AWS_BUCKET_NAME }},key=muldum-deploy.zip,bundleType=zip